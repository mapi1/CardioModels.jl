### A Pluto.jl notebook ###
# v0.14.8

using Markdown
using InteractiveUtils

# This Pluto notebook uses @bind for interactivity. When running this notebook outside of Pluto, the following 'mock version' of @bind gives bound variables a default value (instead of an error).
macro bind(def, element)
    quote
        local el = $(esc(element))
        global $(esc(def)) = Core.applicable(Base.get, el) ? Base.get(el) : missing
        el
    end
end

# ╔═╡ 6d960bb1-b4d7-49f3-8549-78786eabfc74
using PlutoUI, Plots, StatPlots, CardioModels

# ╔═╡ d494e27e-7c67-4abc-b491-0dd09e58f169
md"""
# Baselli Model
The model is defined through the following three equations, where $G$ denotes an all-zero and $M$ an all-pole transfer function:

$S_n = G_{S S}(z) S_n \quad + \quad G_{SI}(z)I_n \quad  + \quad G_{S\rho}(z) \rho_n  \quad  + \quad  M_{S}(z) w_{S}$
$I_n = G_{IS}(z)S_n \quad  + \hspace{40mm}  G_{I\rho}(z) \rho_n \quad  + \quad  M_{I}(z) w_{I}$
$\rho_n = \hspace{104mm}M_{\rho}(z) w_{\rho}$

It can be identified from data as an ARXAR-model using the generalized least squares method.
"""

# ╔═╡ e7684c53-fc26-4658-9825-d622c442f394
md"""
Choose one out of four predefined simulations:

Simulation: 
$(@bind sim NumberField(1:4, default = 1)) 
"""

# ╔═╡ e4febc9c-bed3-4a06-9982-49546ff06269
md"""

* $(sim == 1 ? md"**1: respiration enters on S (LF are generated in the S, S loop)**" : md"1: respiration enters on S (LF are generated in the S, S loop)")  
* $(sim == 2 ? md"**2: respiration enters on I (LF are generated in the S, S loop)**" : md"2: respiration enters on I (LF are generated in the S, S loop)")
* $(sim == 3 ? md"**3: the LF are generated by S regulating feedback in the S, S loop (respiration enters both on S and on I)**" : md"3 : the LF are generated by S regulating feedback in the S, S loop (respiration enters both on S and on I)")
* $(sim == 4 ? md"**4: LF are generated externally from the closed-loop system (i.e., via a central command-respiration enters both on S and on I)**" : md"4: LF are generated externally from the closed-loop system (i.e., via a central command-respiration enters both on S and on I)")

"""

# ╔═╡ 8ad5bc71-dea2-43cc-b745-9c47ff6d7dff
model = getModel(sim);

# ╔═╡ 8c387e69-c2c6-4e93-897a-bdd47c65764d
plot(model, lab = "", dpi = 500, title = "Model #$(sim)")

# ╔═╡ b4c65d6d-72a8-470d-96c3-3d0c6bd810aa
md"""

N: $(@bind N NumberField(1:10000, default = 512)) 

Plot Spectral Denstity: $(@bind ispsd CheckBox())
"""

# ╔═╡ 8f948c31-0561-42e6-a0eb-48891126d9aa
S, I, ρ = predict(model,  N);

# ╔═╡ 0993d11c-c05f-48e7-9c1d-c95bba3d7251
begin
	if ispsd
		pS = psdplot(S, lab = "", title = "")
		pI = psdplot(I, lab = "")
		pρ = psdplot(ρ, lab = "")
	else
		pS = plot(S, lab = "", ylab = "S [mmHg]")
		pI = plot(I, lab = "", ylab = "I [s]")
		pρ = plot(ρ, lab = "", ylab = "\\rho [a.u.]", xlab =  "beat #")
	end
	plot(pS, pI, pρ, layout = (3,1), dpi = 500)
end

# ╔═╡ bfe88fac-5336-4d2b-9d03-c2313ccf542c
md"""
# Idendification of model from data

Identify the model from generated data with different model orders.
"""

# ╔═╡ f2963e4f-e032-4fe1-99a8-2fca1c4667c7
md"""
model order L: $(@bind L NumberField(1:20, default = 10))
"""

# ╔═╡ b33cbdd4-0af3-4c3f-833e-334bf22cc964
modelEstimate = fitBaselli(S, I, ρ, na = L, nb = L, nd = L);

# ╔═╡ 86c8b99c-4d2a-43b7-ad8a-bb639791d97c
begin
	plot(model, lab = "", color = :green)
	plot!(modelEstimate, lab = "", color = :red, dpi = 500, size = (1000, 500))
end

# ╔═╡ 86d849c1-5a6b-4d65-9ea1-cfc85cda5072
postprocess(modelEstimate, S, I)

# ╔═╡ Cell order:
# ╠═6d960bb1-b4d7-49f3-8549-78786eabfc74
# ╟─d494e27e-7c67-4abc-b491-0dd09e58f169
# ╟─e7684c53-fc26-4658-9825-d622c442f394
# ╟─e4febc9c-bed3-4a06-9982-49546ff06269
# ╠═8ad5bc71-dea2-43cc-b745-9c47ff6d7dff
# ╠═8c387e69-c2c6-4e93-897a-bdd47c65764d
# ╟─b4c65d6d-72a8-470d-96c3-3d0c6bd810aa
# ╠═8f948c31-0561-42e6-a0eb-48891126d9aa
# ╟─0993d11c-c05f-48e7-9c1d-c95bba3d7251
# ╟─bfe88fac-5336-4d2b-9d03-c2313ccf542c
# ╟─f2963e4f-e032-4fe1-99a8-2fca1c4667c7
# ╠═b33cbdd4-0af3-4c3f-833e-334bf22cc964
# ╠═86c8b99c-4d2a-43b7-ad8a-bb639791d97c
# ╠═86d849c1-5a6b-4d65-9ea1-cfc85cda5072
